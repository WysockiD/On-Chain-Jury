{"ast":null,"code":"var _jsxFileName = \"/home/dylan/scaffold-eth/packages/react-app/src/App.jsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport { StaticJsonRpcProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport \"./App.css\";\nimport { Row, Col, Button, Menu, Alert, Switch as SwitchD } from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { useExchangePrice, useGasPrice, useUserProvider, useContractLoader, useContractReader, useEventListener, useBalance, useExternalContractLoader, useOnBlock } from \"./hooks\";\nimport { Header, Account, Faucet, Ramp, Contract, GasGauge, ThemeSwitch } from \"./components\";\nimport { Transactor } from \"./helpers\";\nimport { formatEther, parseEther } from \"@ethersproject/units\"; //import Hints from \"./Hints\";\n\nimport { Hints, ExampleUI, Subgraph } from \"./views\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { INFURA_ID, DAI_ADDRESS, DAI_ABI, NETWORK, NETWORKS } from \"./constants\";\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n/// üì° What chain are your contracts deployed to?\n\nconst targetNetwork = NETWORKS['localhost']; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\n\nconst DEBUG = true; // üõ∞ providers\n\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\"); // const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\n\nconst scaffoldEthProvider = new StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\");\nconst mainnetInfura = new StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID); // ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_I\n// üè† Your local provider is usually pointed at your local blockchain\n\nconst localProviderUrl = targetNetwork.rpcUrl; // as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\n\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new StaticJsonRpcProvider(localProviderUrlFromEnv); // üî≠ block explorer URL\n\nconst blockExplorer = targetNetwork.blockExplorer;\n\nfunction App(props) {\n  const mainnetProvider = scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n\n  const price = useExchangePrice(targetNetwork, mainnetProvider);\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider); // You can warn the user if you would like them to be on a specific network\n\n  let localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  let selectedChainId = userProvider && userProvider._network && userProvider._network.chainId; // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userProvider, gasPrice); // Faucet Tx can be used to send funds from the faucet\n\n  const faucetTx = Transactor(localProvider, gasPrice); // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address); // Just plug in different üõ∞ providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address); // Load in your local üìù contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider); // If you want to make üîê write transactions to your contracts, use the userProvider:\n\n  const writeContracts = useContractLoader(userProvider); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI); // If you want to call a function on a new block\n\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  }); // Then read your DAI balance like:\n\n  const myMainnetDAIBalance = useContractReader({\n    DAI: mainnetDAIContract\n  }, \"DAI\", \"balanceOf\", [\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]); // keep track of a variable from the contract in the local React state:\n\n  const purpose = useContractReader(readContracts, \"YourContract\", \"time\");\n  const count = useContractReader(readContracts, \"YourContract\", \"count\"); //üìü Listen for broadcast events\n\n  const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"register\", localProvider, 1);\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n\n  useEffect(() => {\n    if (DEBUG && mainnetProvider && address && selectedChainId && yourLocalBalance && yourMainnetBalance && readContracts && writeContracts && mainnetDAIContract) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetDAIContract);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [mainnetProvider, address, selectedChainId, yourLocalBalance, yourMainnetBalance, readContracts, writeContracts, mainnetDAIContract]);\n  let networkDisplay = \"\";\n\n  if (localChainId && selectedChainId && localChainId != selectedChainId) {\n    networkDisplay = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        zIndex: 2,\n        position: 'absolute',\n        right: 0,\n        top: 60,\n        padding: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      message: \"‚ö†Ô∏è Wrong Network\",\n      description: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, \"You have \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 24\n        }\n      }, NETWORK(selectedChainId).name), \" selected and you need to be on \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 94\n        }\n      }, NETWORK(localChainId).name), \".\"),\n      type: \"error\",\n      closable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    networkDisplay = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        zIndex: -1,\n        position: 'absolute',\n        right: 154,\n        top: 28,\n        padding: 16,\n        color: targetNetwork.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, targetNetwork.name);\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name == \"localhost\";\n  const [faucetClicked, setFaucetClicked] = useState(false);\n\n  if (!faucetClicked && localProvider && localProvider._network && localProvider._network.chainId == 31337 && yourLocalBalance && formatEther(yourLocalBalance) <= 0) {\n    faucetHint = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => {\n        faucetTx({\n          to: address,\n          value: parseEther(\"0.01\")\n        });\n        setFaucetClicked(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }, \"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }), networkDisplay, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    style: {\n      textAlign: \"center\"\n    },\n    selectedKeys: [route],\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/\");\n    },\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, \"The Contract\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/hints\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/hints\");\n    },\n    to: \"/hints\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, \"The Case\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/exampleui\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/exampleui\");\n    },\n    to: \"/exampleui\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, \"Jury Deliberation\"))), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Contract, {\n    name: \"YourContract\",\n    signer: userProvider.getSigner(),\n    provider: localProvider,\n    address: address,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/hints\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Hints, {\n    address: address,\n    yourLocalBalance: yourLocalBalance,\n    mainnetProvider: mainnetProvider,\n    price: price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/exampleui\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ExampleUI, {\n    address: address,\n    userProvider: userProvider,\n    mainnetProvider: mainnetProvider,\n    localProvider: localProvider,\n    yourLocalBalance: yourLocalBalance,\n    price: price,\n    tx: tx,\n    writeContracts: writeContracts,\n    readContracts: readContracts,\n    purpose: purpose,\n    count: count,\n    setPurposeEvents: setPurposeEvents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/mainnetdai\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Contract, {\n    name: \"DAI\",\n    customContract: mainnetDAIContract,\n    signer: userProvider.getSigner(),\n    provider: mainnetProvider,\n    address: address,\n    blockExplorer: \"https://etherscan.io/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/subgraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Subgraph, {\n    subgraphUri: props.subgraphUri,\n    tx: tx,\n    writeContracts: writeContracts,\n    mainnetProvider: mainnetProvider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(ThemeSwitch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"right\",\n      right: 0,\n      top: 0,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Account, {\n    address: address,\n    localProvider: localProvider,\n    userProvider: userProvider,\n    mainnetProvider: mainnetProvider,\n    price: price,\n    web3Modal: web3Modal,\n    loadWeb3Modal: loadWeb3Modal,\n    logoutOfWeb3Modal: logoutOfWeb3Modal,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 10\n    }\n  }), faucetHint), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"left\",\n      left: 0,\n      bottom: 20,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"center\",\n      opacity: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n    },\n    size: \"large\",\n    shape: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    role: \"img\",\n    \"aria-label\": \"support\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 16\n    }\n  }, \"\\uD83D\\uDCAC\"), \"Chatroom\")), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Ramp, {\n    price: price,\n    address: address,\n    networks: NETWORKS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"center\",\n      opacity: 0.8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(GasGauge, {\n    gasPrice: gasPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 14\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 12\n    }\n  },\n  /*  if the local provider has a signer, let's show the faucet:  */\n  faucetAvailable ? /*#__PURE__*/React.createElement(Faucet, {\n    localProvider: localProvider,\n    price: price,\n    ensProvider: mainnetProvider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 18\n    }\n  }) : \"\"))));\n}\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\n\n\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true,\n  // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        infuraId: INFURA_ID\n      }\n    }\n  }\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\nwindow.ethereum && window.ethereum.on('chainChanged', chainId => {\n  web3Modal.cachedProvider && setTimeout(() => {\n    window.location.reload();\n  }, 1);\n});\nwindow.ethereum && window.ethereum.on('accountsChanged', accounts => {\n  web3Modal.cachedProvider && setTimeout(() => {\n    window.location.reload();\n  }, 1);\n});\nexport default App;","map":{"version":3,"sources":["/home/dylan/scaffold-eth/packages/react-app/src/App.jsx"],"names":["React","useCallback","useEffect","useState","BrowserRouter","Switch","Route","Link","StaticJsonRpcProvider","JsonRpcProvider","Web3Provider","Row","Col","Button","Menu","Alert","SwitchD","Web3Modal","WalletConnectProvider","useUserAddress","useExchangePrice","useGasPrice","useUserProvider","useContractLoader","useContractReader","useEventListener","useBalance","useExternalContractLoader","useOnBlock","Header","Account","Faucet","Ramp","Contract","GasGauge","ThemeSwitch","Transactor","formatEther","parseEther","Hints","ExampleUI","Subgraph","useThemeSwitcher","INFURA_ID","DAI_ADDRESS","DAI_ABI","NETWORK","NETWORKS","targetNetwork","DEBUG","console","log","scaffoldEthProvider","mainnetInfura","localProviderUrl","rpcUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","localProvider","blockExplorer","App","props","mainnetProvider","_network","injectedProvider","setInjectedProvider","price","gasPrice","userProvider","address","localChainId","chainId","selectedChainId","tx","faucetTx","yourLocalBalance","yourMainnetBalance","readContracts","writeContracts","mainnetDAIContract","_lastBlockNumber","myMainnetDAIBalance","DAI","purpose","count","setPurposeEvents","networkDisplay","zIndex","position","right","top","padding","name","color","loadWeb3Modal","provider","web3Modal","connect","cachedProvider","route","setRoute","window","location","pathname","faucetHint","faucetAvailable","connection","faucetClicked","setFaucetClicked","to","value","textAlign","getSigner","subgraphUri","logoutOfWeb3Modal","left","bottom","opacity","open","marginRight","cacheProvider","providerOptions","walletconnect","package","options","infuraId","clearCachedProvider","setTimeout","reload","ethereum","on","accounts"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport {  StaticJsonRpcProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport \"./App.css\";\nimport { Row, Col, Button, Menu, Alert, Switch as SwitchD } from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { useExchangePrice, useGasPrice, useUserProvider, useContractLoader, useContractReader, useEventListener, useBalance, useExternalContractLoader, useOnBlock } from \"./hooks\";\nimport { Header, Account, Faucet, Ramp, Contract, GasGauge, ThemeSwitch } from \"./components\";\nimport { Transactor } from \"./helpers\";\nimport { formatEther, parseEther } from \"@ethersproject/units\";\n//import Hints from \"./Hints\";\nimport { Hints, ExampleUI, Subgraph } from \"./views\"\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { INFURA_ID, DAI_ADDRESS, DAI_ABI, NETWORK, NETWORKS } from \"./constants\";\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n\n/// üì° What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS['localhost']; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// üò¨ Sorry for all the console logging\nconst DEBUG = true\n\n\n// üõ∞ providers\nif(DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\nconst scaffoldEthProvider = new StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\nconst mainnetInfura = new StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\n// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_I\n\n// üè† Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif(DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new StaticJsonRpcProvider(localProviderUrlFromEnv);\n\n\n// üî≠ block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n\nfunction App(props) {\n\n  const mainnetProvider = (scaffoldEthProvider && scaffoldEthProvider._network) ? scaffoldEthProvider : mainnetInfura\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n  const price = useExchangePrice(targetNetwork,mainnetProvider);\n\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork,\"fast\");\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider);\n\n  // You can warn the user if you would like them to be on a specific network\n  let localChainId = localProvider && localProvider._network && localProvider._network.chainId\n  let selectedChainId = userProvider && userProvider._network && userProvider._network.chainId\n\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userProvider, gasPrice)\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice)\n\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different üõ∞ providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  // Load in your local üìù contract and read a value from it:\n  const readContracts = useContractLoader(localProvider)\n\n  // If you want to make üîê write transactions to your contracts, use the userProvider:\n  const writeContracts = useContractLoader(userProvider)\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI)\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`)\n  })\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader({DAI: mainnetDAIContract},\"DAI\", \"balanceOf\",[\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"])\n\n  // keep track of a variable from the contract in the local React state:\n  const purpose = useContractReader(readContracts,\"YourContract\", \"time\")\n  const count = useContractReader(readContracts,\"YourContract\", \"count\")\n\n  //üìü Listen for broadcast events\n  const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"register\", localProvider,1);\n  \n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n  useEffect(()=>{\n    if(DEBUG && mainnetProvider && address && selectedChainId && yourLocalBalance && yourMainnetBalance && readContracts && writeContracts && mainnetDAIContract){\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\")\n      console.log(\"üåé mainnetProvider\",mainnetProvider)\n      console.log(\"üè† localChainId\",localChainId)\n      console.log(\"üë©‚Äçüíº selected address:\",address)\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\",selectedChainId)\n      console.log(\"üíµ yourLocalBalance\",yourLocalBalance?formatEther(yourLocalBalance):\"...\")\n      console.log(\"üíµ yourMainnetBalance\",yourMainnetBalance?formatEther(yourMainnetBalance):\"...\")\n      console.log(\"üìù readContracts\",readContracts)\n      console.log(\"üåç DAI contract on mainnet:\",mainnetDAIContract)\n      console.log(\"üîê writeContracts\",writeContracts)\n    }\n  }, [mainnetProvider, address, selectedChainId, yourLocalBalance, yourMainnetBalance, readContracts, writeContracts, mainnetDAIContract])\n\n\n  let networkDisplay = \"\"\n  if(localChainId && selectedChainId && localChainId != selectedChainId ){\n    networkDisplay = (\n      <div style={{zIndex:2, position:'absolute', right:0,top:60,padding:16}}>\n        <Alert\n          message={\"‚ö†Ô∏è Wrong Network\"}\n          description={(\n            <div>\n              You have <b>{NETWORK(selectedChainId).name}</b> selected and you need to be on <b>{NETWORK(localChainId).name}</b>.\n            </div>\n          )}\n          type=\"error\"\n          closable={false}\n        />\n      </div>\n    )\n  }else{\n    networkDisplay = (\n      <div style={{zIndex:-1, position:'absolute', right:154,top:28,padding:16,color:targetNetwork.color}}>\n        {targetNetwork.name}\n      </div>\n    )\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname)\n  }, [setRoute]);\n\n  let faucetHint = \"\"\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name == \"localhost\"\n\n  const [ faucetClicked, setFaucetClicked ] = useState( false );\n  if(!faucetClicked&&localProvider&&localProvider._network&&localProvider._network.chainId==31337&&yourLocalBalance&&formatEther(yourLocalBalance)<=0){\n    faucetHint = (\n      <div style={{padding:16}}>\n        <Button type={\"primary\"} onClick={()=>{\n          faucetTx({\n            to: address,\n            value: parseEther(\"0.01\"),\n          });\n          setFaucetClicked(true)\n        }}>\n          üí∞ Grab funds from the faucet ‚õΩÔ∏è\n        </Button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\n      <Header />\n      {networkDisplay}\n      <BrowserRouter>\n\n        <Menu style={{ textAlign:\"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link onClick={()=>{setRoute(\"/\")}} to=\"/\">The Contract</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/hints\">\n            <Link onClick={()=>{setRoute(\"/hints\")}} to=\"/hints\">The Case</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/exampleui\">\n            <Link onClick={()=>{setRoute(\"/exampleui\")}} to=\"/exampleui\">Jury Deliberation</Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            {/*\n                üéõ this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n\n            <Contract\n              name=\"YourContract\"\n              signer={userProvider.getSigner()}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n\n\n            { /* uncomment for a second contract:\n            <Contract\n              name=\"SecondContract\"\n              signer={userProvider.getSigner()}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n            */ }\n\n            { /* Uncomment to display and interact with an external contract (DAI on mainnet):\n            <Contract\n              name=\"DAI\"\n              customContract={mainnetDAIContract}\n              signer={userProvider.getSigner()}\n              provider={mainnetProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n            */ }\n          </Route>\n          <Route path=\"/hints\">\n            <Hints\n              address={address}\n              yourLocalBalance={yourLocalBalance}\n              mainnetProvider={mainnetProvider}\n              price={price}\n            />\n          </Route>\n          <Route path=\"/exampleui\">\n            <ExampleUI\n              address={address}\n              userProvider={userProvider}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={price}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              purpose={purpose}\n              count={count}\n              setPurposeEvents={setPurposeEvents}\n            />\n          </Route>\n          <Route path=\"/mainnetdai\">\n            <Contract\n              name=\"DAI\"\n              customContract={mainnetDAIContract}\n              signer={userProvider.getSigner()}\n              provider={mainnetProvider}\n              address={address}\n              blockExplorer={\"https://etherscan.io/\"}\n            />\n          </Route>\n          <Route path=\"/subgraph\">\n            <Subgraph\n            subgraphUri={props.subgraphUri}\n            tx={tx}\n            writeContracts={writeContracts}\n            mainnetProvider={mainnetProvider}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      <ThemeSwitch />\n\n\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n         <Account\n           address={address}\n           localProvider={localProvider}\n           userProvider={userProvider}\n           mainnetProvider={mainnetProvider}\n           price={price}\n           web3Modal={web3Modal}\n           loadWeb3Modal={loadWeb3Modal}\n           logoutOfWeb3Modal={logoutOfWeb3Modal}\n           blockExplorer={blockExplorer}\n         />\n         {faucetHint}\n      </div>\n\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\n       <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n         <Row align=\"middle\" gutter={[4, 4]}>\n         <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n             <Button\n               onClick={() => {\n                 window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n               }}\n               size=\"large\"\n               shape=\"round\"\n             >\n               <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                 üí¨\n               </span>\n               Chatroom\n             </Button>\n           </Col>\n           <Col span={8}>\n             <Ramp price={price} address={address} networks={NETWORKS}/>\n           </Col>\n\n           <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n             <GasGauge gasPrice={gasPrice} />\n           </Col>\n\n         </Row>\n\n         <Row align=\"middle\" gutter={[4, 4]}>\n           <Col span={24}>\n             {\n\n               /*  if the local provider has a signer, let's show the faucet:  */\n               faucetAvailable ? (\n                 <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider}/>\n               ) : (\n                 \"\"\n               )\n             }\n           </Col>\n         </Row>\n       </div>\n\n    </div>\n  );\n}\n\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\n window.ethereum && window.ethereum.on('chainChanged', chainId => {\n  web3Modal.cachedProvider &&\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n})\n\n window.ethereum && window.ethereum.on('accountsChanged', accounts => {\n  web3Modal.cachedProvider &&\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n})\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}