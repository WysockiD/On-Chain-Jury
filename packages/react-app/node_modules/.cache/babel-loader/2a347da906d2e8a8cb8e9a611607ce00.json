{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useFreshState;\n\nvar _react = require(\"react\");\n\nvar _raf = _interopRequireDefault(require(\"rc-util/lib/raf\"));\n\nvar _useForceUpdate = _interopRequireDefault(require(\"../_util/hooks/useForceUpdate\")); // Note. Only for upload usage. Do not export to global util hooks\n\n\nfunction useFreshState(defaultValue, propValue) {\n  var valueRef = (0, _react.useRef)(defaultValue);\n  var forceUpdate = (0, _useForceUpdate[\"default\"])();\n  var rafRef = (0, _react.useRef)(); // Set value\n\n  function setValue(newValue) {\n    valueRef.current = newValue;\n    forceUpdate();\n  }\n\n  function cleanUp() {\n    _raf[\"default\"].cancel(rafRef.current);\n  }\n\n  function rafSyncValue(newValue) {\n    cleanUp();\n    rafRef.current = (0, _raf[\"default\"])(function () {\n      setValue(newValue);\n    });\n  } // Get value\n\n\n  function getValue() {\n    var displayValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (displayValue) {\n      return propValue || valueRef.current;\n    }\n\n    return valueRef.current;\n  } // Effect will always update in a next frame to avoid sync state overwrite current processing state\n\n\n  (0, _react.useEffect)(function () {\n    if (propValue) {\n      rafSyncValue(propValue);\n    }\n  }, [propValue]); // Clean up\n\n  (0, _react.useEffect)(function () {\n    return function () {\n      cleanUp();\n    };\n  }, []);\n  return [getValue, setValue];\n}","map":{"version":3,"sources":["/home/dylan/Desktop/JuryDapp/node_modules/antd/lib/upload/useFreshState.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useFreshState","_react","_raf","_useForceUpdate","defaultValue","propValue","valueRef","useRef","forceUpdate","rafRef","setValue","newValue","current","cleanUp","cancel","rafSyncValue","getValue","displayValue","arguments","length","undefined","useEffect"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,aAArB;;AAEA,IAAIC,MAAM,GAAGN,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIO,IAAI,GAAGR,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAAjC;;AAEA,IAAIQ,eAAe,GAAGT,sBAAsB,CAACC,OAAO,CAAC,+BAAD,CAAR,CAA5C,C,CAEA;;;AACA,SAASK,aAAT,CAAuBI,YAAvB,EAAqCC,SAArC,EAAgD;AAC9C,MAAIC,QAAQ,GAAG,CAAC,GAAGL,MAAM,CAACM,MAAX,EAAmBH,YAAnB,CAAf;AACA,MAAII,WAAW,GAAG,CAAC,GAAGL,eAAe,CAAC,SAAD,CAAnB,GAAlB;AACA,MAAIM,MAAM,GAAG,CAAC,GAAGR,MAAM,CAACM,MAAX,GAAb,CAH8C,CAGX;;AAEnC,WAASG,QAAT,CAAkBC,QAAlB,EAA4B;AAC1BL,IAAAA,QAAQ,CAACM,OAAT,GAAmBD,QAAnB;AACAH,IAAAA,WAAW;AACZ;;AAED,WAASK,OAAT,GAAmB;AACjBX,IAAAA,IAAI,CAAC,SAAD,CAAJ,CAAgBY,MAAhB,CAAuBL,MAAM,CAACG,OAA9B;AACD;;AAED,WAASG,YAAT,CAAsBJ,QAAtB,EAAgC;AAC9BE,IAAAA,OAAO;AACPJ,IAAAA,MAAM,CAACG,OAAP,GAAiB,CAAC,GAAGV,IAAI,CAAC,SAAD,CAAR,EAAqB,YAAY;AAChDQ,MAAAA,QAAQ,CAACC,QAAD,CAAR;AACD,KAFgB,CAAjB;AAGD,GAnB6C,CAmB5C;;;AAGF,WAASK,QAAT,GAAoB;AAClB,QAAIC,YAAY,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAvF;;AAEA,QAAID,YAAJ,EAAkB;AAChB,aAAOZ,SAAS,IAAIC,QAAQ,CAACM,OAA7B;AACD;;AAED,WAAON,QAAQ,CAACM,OAAhB;AACD,GA9B6C,CA8B5C;;;AAGF,GAAC,GAAGX,MAAM,CAACoB,SAAX,EAAsB,YAAY;AAChC,QAAIhB,SAAJ,EAAe;AACbU,MAAAA,YAAY,CAACV,SAAD,CAAZ;AACD;AACF,GAJD,EAIG,CAACA,SAAD,CAJH,EAjC8C,CAqC7B;;AAEjB,GAAC,GAAGJ,MAAM,CAACoB,SAAX,EAAsB,YAAY;AAChC,WAAO,YAAY;AACjBR,MAAAA,OAAO;AACR,KAFD;AAGD,GAJD,EAIG,EAJH;AAKA,SAAO,CAACG,QAAD,EAAWN,QAAX,CAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useFreshState;\n\nvar _react = require(\"react\");\n\nvar _raf = _interopRequireDefault(require(\"rc-util/lib/raf\"));\n\nvar _useForceUpdate = _interopRequireDefault(require(\"../_util/hooks/useForceUpdate\"));\n\n// Note. Only for upload usage. Do not export to global util hooks\nfunction useFreshState(defaultValue, propValue) {\n  var valueRef = (0, _react.useRef)(defaultValue);\n  var forceUpdate = (0, _useForceUpdate[\"default\"])();\n  var rafRef = (0, _react.useRef)(); // Set value\n\n  function setValue(newValue) {\n    valueRef.current = newValue;\n    forceUpdate();\n  }\n\n  function cleanUp() {\n    _raf[\"default\"].cancel(rafRef.current);\n  }\n\n  function rafSyncValue(newValue) {\n    cleanUp();\n    rafRef.current = (0, _raf[\"default\"])(function () {\n      setValue(newValue);\n    });\n  } // Get value\n\n\n  function getValue() {\n    var displayValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (displayValue) {\n      return propValue || valueRef.current;\n    }\n\n    return valueRef.current;\n  } // Effect will always update in a next frame to avoid sync state overwrite current processing state\n\n\n  (0, _react.useEffect)(function () {\n    if (propValue) {\n      rafSyncValue(propValue);\n    }\n  }, [propValue]); // Clean up\n\n  (0, _react.useEffect)(function () {\n    return function () {\n      cleanUp();\n    };\n  }, []);\n  return [getValue, setValue];\n}"]},"metadata":{},"sourceType":"script"}