{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = forEachState;\n/**\n *  Copyright (c) 2020 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n// Utility for iterating through a CodeMirror parse state stack bottom-up.\n\nfunction forEachState(stack, fn) {\n  const reverseStateStack = [];\n  let state = stack;\n\n  while (state && state.kind) {\n    reverseStateStack.push(state);\n    state = state.prevState;\n  }\n\n  for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n    fn(reverseStateStack[i]);\n  }\n}","map":{"version":3,"sources":["/home/dylan/scaffold-eth/node_modules/codemirror-graphql/utils/forEachState.js"],"names":["Object","defineProperty","exports","value","default","forEachState","stack","fn","reverseStateStack","state","kind","push","prevState","i","length"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,EAA7B,EAAiC;AAC/B,QAAMC,iBAAiB,GAAG,EAA1B;AACA,MAAIC,KAAK,GAAGH,KAAZ;;AAEA,SAAOG,KAAK,IAAIA,KAAK,CAACC,IAAtB,EAA4B;AAC1BF,IAAAA,iBAAiB,CAACG,IAAlB,CAAuBF,KAAvB;AACAA,IAAAA,KAAK,GAAGA,KAAK,CAACG,SAAd;AACD;;AAED,OAAK,IAAIC,CAAC,GAAGL,iBAAiB,CAACM,MAAlB,GAA2B,CAAxC,EAA2CD,CAAC,IAAI,CAAhD,EAAmDA,CAAC,EAApD,EAAwD;AACtDN,IAAAA,EAAE,CAACC,iBAAiB,CAACK,CAAD,CAAlB,CAAF;AACD;AACF","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = forEachState;\n\n/**\n *  Copyright (c) 2020 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n// Utility for iterating through a CodeMirror parse state stack bottom-up.\nfunction forEachState(stack, fn) {\n  const reverseStateStack = [];\n  let state = stack;\n\n  while (state && state.kind) {\n    reverseStateStack.push(state);\n    state = state.prevState;\n  }\n\n  for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n    fn(reverseStateStack[i]);\n  }\n}"]},"metadata":{},"sourceType":"script"}