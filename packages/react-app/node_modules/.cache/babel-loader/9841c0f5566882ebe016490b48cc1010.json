{"ast":null,"code":"var _jsxFileName = \"/home/dylan/Desktop/JuryDapp/packages/react-app/src/views/Hints.jsx\";\nimport React, { useState } from \"react\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { Address, AddressInput } from \"../components\";\nimport { Image, Select, Upload, Button, message } from \"antd\";\nimport { useTokenList } from \"../hooks\";\nimport { UploadOutlined, InboxOutlined, LeftOutlined } from '@ant-design/icons';\nimport Dragger from \"antd/lib/upload/Dragger\";\nconst {\n  Option\n} = Select;\nexport default function Hints({\n  yourLocalBalance,\n  mainnetProvider,\n  price,\n  address\n}) {\n  // Get a list of tokens from a tokenlist -> see tokenlists.org!\n  const [selectedToken, setSelectedToken] = useState(\"Pick a token!\");\n  let listOfTokens = useTokenList(\"https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json\");\n  const props = {\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n\n    onChange({\n      file,\n      fileList\n    }) {\n      if (file.status !== 'uploading') {\n        console.log(file, fileList);\n      }\n    },\n\n    defaultFileList: [{\n      uid: '1',\n      name: 'xxx.png',\n      status: 'done',\n      response: 'Server Error 500',\n      // custom error message to show\n      url: 'http://www.baidu.com/xxx.png'\n    }, {\n      uid: '2',\n      name: 'yyy.png',\n      status: 'done',\n      url: 'http://www.baidu.com/yyy.png'\n    }, {\n      uid: '3',\n      name: 'zzz.png',\n      status: 'done',\n      response: 'Server Error 500',\n      // custom error message to show\n      url: 'http://www.baidu.com/zzz.png'\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      border: \"1px dashed #cccccc\",\n      padding: 16,\n      width: 'auto',\n      margin: 55,\n      marginTop: 64\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Upload, Object.assign({\n    progress: true\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    icon: /*#__PURE__*/React.createElement(UploadOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"Upload\"))));\n}","map":{"version":3,"sources":["/home/dylan/Desktop/JuryDapp/packages/react-app/src/views/Hints.jsx"],"names":["React","useState","formatEther","Address","AddressInput","Image","Select","Upload","Button","message","useTokenList","UploadOutlined","InboxOutlined","LeftOutlined","Dragger","Option","Hints","yourLocalBalance","mainnetProvider","price","address","selectedToken","setSelectedToken","listOfTokens","props","action","onChange","file","fileList","status","console","log","defaultFileList","uid","name","response","url","border","padding","width","margin","marginTop"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,eAAtC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCC,OAAxC,QAAuD,MAAvD;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,YAAxC,QAA4D,mBAA5D;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaT,MAAnB;AAEA,eAAe,SAASU,KAAT,CAAe;AAACC,EAAAA,gBAAD;AAAmBC,EAAAA,eAAnB;AAAoCC,EAAAA,KAApC;AAA2CC,EAAAA;AAA3C,CAAf,EAAqE;AAElF;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,eAAD,CAAlD;AACA,MAAIsB,YAAY,GAAGb,YAAY,CAAC,yFAAD,CAA/B;AAGF,QAAMc,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAE,kDADI;;AAEZC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,EAAqB;AAC3B,UAAID,IAAI,CAACE,MAAL,KAAgB,WAApB,EAAiC;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,QAAlB;AACD;AACF,KANW;;AAOZI,IAAAA,eAAe,EAAE,CACf;AACEC,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEL,MAAAA,MAAM,EAAE,MAHV;AAIEM,MAAAA,QAAQ,EAAE,kBAJZ;AAIgC;AAC9BC,MAAAA,GAAG,EAAE;AALP,KADe,EAQf;AACEH,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEL,MAAAA,MAAM,EAAE,MAHV;AAIEO,MAAAA,GAAG,EAAE;AAJP,KARe,EAcf;AACEH,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEL,MAAAA,MAAM,EAAE,MAHV;AAIEM,MAAAA,QAAQ,EAAE,kBAJZ;AAIgC;AAC9BC,MAAAA,GAAG,EAAE;AALP,KAde;AAPL,GAAd;AA8BA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC,oBAAR;AAA8BC,MAAAA,OAAO,EAAC,EAAtC;AAA0CC,MAAAA,KAAK,EAAC,MAAhD;AAAwDC,MAAAA,MAAM,EAAC,EAA/D;AAAkEC,MAAAA,SAAS,EAAC;AAA5E,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,MAAD;AAAQ,IAAA,QAAQ;AAAhB,KAAqBjB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACA,oBAAC,MAAD;AAAQ,IAAA,IAAI,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CAFA,CAJF,CADF;AA8BC","sourcesContent":["\nimport React, { useState } from \"react\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { Address, AddressInput } from \"../components\";\nimport { Image, Select, Upload, Button, message } from \"antd\";\nimport { useTokenList } from \"../hooks\";\nimport { UploadOutlined, InboxOutlined, LeftOutlined } from '@ant-design/icons';\nimport Dragger from \"antd/lib/upload/Dragger\";\n\nconst { Option } = Select;\n\nexport default function Hints({yourLocalBalance, mainnetProvider, price, address }) {\n\n  // Get a list of tokens from a tokenlist -> see tokenlists.org!\n  const [selectedToken, setSelectedToken] = useState(\"Pick a token!\");\n  let listOfTokens = useTokenList(\"https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json\")\n\n\nconst props = {\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n  onChange({ file, fileList }) {\n    if (file.status !== 'uploading') {\n      console.log(file, fileList);\n    }\n  },\n  defaultFileList: [\n    {\n      uid: '1',\n      name: 'xxx.png',\n      status: 'done',\n      response: 'Server Error 500', // custom error message to show\n      url: 'http://www.baidu.com/xxx.png',\n    },\n    {\n      uid: '2',\n      name: 'yyy.png',\n      status: 'done',\n      url: 'http://www.baidu.com/yyy.png',\n    },\n    {\n      uid: '3',\n      name: 'zzz.png',\n      status: 'done',\n      response: 'Server Error 500', // custom error message to show\n      url: 'http://www.baidu.com/zzz.png',\n    },\n  ],\n};\nreturn (\n  <div>\n    {/*\n      ⚙️ Here is an example UI that displays and sets the purpose in your smart contract:\n    */}\n    <div style={{border:\"1px dashed #cccccc\", padding:16, width:'auto', margin:55,marginTop:64}}>\n      \n    <Upload progress {...props}>\n    <Button icon={<UploadOutlined />}>Upload</Button>\n  </Upload> \n\n\n    \n  </div>\n  </div>\n  \n);\n\n\n\n\n\n  \n  \n\n        \n      \n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}