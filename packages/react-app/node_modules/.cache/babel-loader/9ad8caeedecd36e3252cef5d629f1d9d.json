{"ast":null,"code":"var _jsxFileName = \"/home/dylan/Desktop/JuryDapp/packages/react-app/src/views/Hints.jsx\";\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from \"react\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { Address, AddressInput } from \"../components\";\nimport { Image, Select, Upload, Button } from \"antd\";\nimport { useTokenList } from \"../hooks\";\nimport { UploadOutlined } from '@ant-design/icons';\nconst {\n  Option\n} = Select;\nexport default function Hints({\n  yourLocalBalance,\n  mainnetProvider,\n  price,\n  address\n}) {\n  // Get a list of tokens from a tokenlist -> see tokenlists.org!\n  const [selectedToken, setSelectedToken] = useState(\"Pick a token!\");\n  let listOfTokens = useTokenList(\"https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json\");\n  const props = {\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n\n    onChange({\n      file,\n      fileList\n    }) {\n      if (file.status !== 'uploading') {\n        console.log(file, fileList);\n      }\n    },\n\n    defaultFileList: [{\n      uid: '1',\n      name: 'xxx.png',\n      status: 'done',\n      response: 'Server Error 500',\n      // custom error message to show\n      url: 'http://www.baidu.com/xxx.png'\n    }, {\n      uid: '2',\n      name: 'yyy.png',\n      status: 'done',\n      url: 'http://www.baidu.com/yyy.png'\n    }, {\n      uid: '3',\n      name: 'zzz.png',\n      status: 'error',\n      response: 'Server Error 500',\n      // custom error message to show\n      url: 'http://www.baidu.com/zzz.png'\n    }]\n  };\n  ReactDOM.render( /*#__PURE__*/React.createElement(Upload, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    icon: /*#__PURE__*/React.createElement(UploadOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, \"Upload\")), mountNode);\n}","map":{"version":3,"sources":["/home/dylan/Desktop/JuryDapp/packages/react-app/src/views/Hints.jsx"],"names":["React","useState","formatEther","Address","AddressInput","Image","Select","Upload","Button","useTokenList","UploadOutlined","Option","Hints","yourLocalBalance","mainnetProvider","price","address","selectedToken","setSelectedToken","listOfTokens","props","action","onChange","file","fileList","status","console","log","defaultFileList","uid","name","response","url","ReactDOM","render","mountNode"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,eAAtC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,MAAhC,QAA8C,MAA9C;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaL,MAAnB;AAEA,eAAe,SAASM,KAAT,CAAe;AAACC,EAAAA,gBAAD;AAAmBC,EAAAA,eAAnB;AAAoCC,EAAAA,KAApC;AAA2CC,EAAAA;AAA3C,CAAf,EAAqE;AAElF;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,eAAD,CAAlD;AACA,MAAIkB,YAAY,GAAGV,YAAY,CAAC,yFAAD,CAA/B;AAGF,QAAMW,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAE,kDADI;;AAEZC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,EAAqB;AAC3B,UAAID,IAAI,CAACE,MAAL,KAAgB,WAApB,EAAiC;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,QAAlB;AACD;AACF,KANW;;AAOZI,IAAAA,eAAe,EAAE,CACf;AACEC,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEL,MAAAA,MAAM,EAAE,MAHV;AAIEM,MAAAA,QAAQ,EAAE,kBAJZ;AAIgC;AAC9BC,MAAAA,GAAG,EAAE;AALP,KADe,EAQf;AACEH,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEL,MAAAA,MAAM,EAAE,MAHV;AAIEO,MAAAA,GAAG,EAAE;AAJP,KARe,EAcf;AACEH,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEL,MAAAA,MAAM,EAAE,OAHV;AAIEM,MAAAA,QAAQ,EAAE,kBAJZ;AAIgC;AAC9BC,MAAAA,GAAG,EAAE;AALP,KAde;AAPL,GAAd;AA+BAC,EAAAA,QAAQ,CAACC,MAAT,eACE,oBAAC,MAAD,oBAAYd,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAIEe,SAJF;AAYC","sourcesContent":["/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React, { useState } from \"react\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { Address, AddressInput } from \"../components\";\nimport { Image, Select, Upload, Button } from \"antd\";\nimport { useTokenList } from \"../hooks\";\nimport { UploadOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\nexport default function Hints({yourLocalBalance, mainnetProvider, price, address }) {\n\n  // Get a list of tokens from a tokenlist -> see tokenlists.org!\n  const [selectedToken, setSelectedToken] = useState(\"Pick a token!\");\n  let listOfTokens = useTokenList(\"https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json\")\n\n\nconst props = {\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n  onChange({ file, fileList }) {\n    if (file.status !== 'uploading') {\n      console.log(file, fileList);\n    }\n  },\n  defaultFileList: [\n    {\n      uid: '1',\n      name: 'xxx.png',\n      status: 'done',\n      response: 'Server Error 500', // custom error message to show\n      url: 'http://www.baidu.com/xxx.png',\n    },\n    {\n      uid: '2',\n      name: 'yyy.png',\n      status: 'done',\n      url: 'http://www.baidu.com/yyy.png',\n    },\n    {\n      uid: '3',\n      name: 'zzz.png',\n      status: 'error',\n      response: 'Server Error 500', // custom error message to show\n      url: 'http://www.baidu.com/zzz.png',\n    },\n  ],\n};\n\nReactDOM.render(\n  <Upload {...props}>\n    <Button icon={<UploadOutlined />}>Upload</Button>\n  </Upload>,\n  mountNode,\n);\n\n        \n      \n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}