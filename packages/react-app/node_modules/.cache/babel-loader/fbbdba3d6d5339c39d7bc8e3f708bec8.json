{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var GUTTER_ID = \"CodeMirror-lint-markers\";\n\n  function showTooltip(cm, e, content) {\n    var tt = document.createElement(\"div\");\n    tt.className = \"CodeMirror-lint-tooltip cm-s-\" + cm.options.theme;\n    tt.appendChild(content.cloneNode(true));\n    if (cm.state.lint.options.selfContain) cm.getWrapperElement().appendChild(tt);else document.body.appendChild(tt);\n\n    function position(e) {\n      if (!tt.parentNode) return CodeMirror.off(document, \"mousemove\", position);\n      tt.style.top = Math.max(0, e.clientY - tt.offsetHeight - 5) + \"px\";\n      tt.style.left = e.clientX + 5 + \"px\";\n    }\n\n    CodeMirror.on(document, \"mousemove\", position);\n    position(e);\n    if (tt.style.opacity != null) tt.style.opacity = 1;\n    return tt;\n  }\n\n  function rm(elt) {\n    if (elt.parentNode) elt.parentNode.removeChild(elt);\n  }\n\n  function hideTooltip(tt) {\n    if (!tt.parentNode) return;\n    if (tt.style.opacity == null) rm(tt);\n    tt.style.opacity = 0;\n    setTimeout(function () {\n      rm(tt);\n    }, 600);\n  }\n\n  function showTooltipFor(cm, e, content, node) {\n    var tooltip = showTooltip(cm, e, content);\n\n    function hide() {\n      CodeMirror.off(node, \"mouseout\", hide);\n\n      if (tooltip) {\n        hideTooltip(tooltip);\n        tooltip = null;\n      }\n    }\n\n    var poll = setInterval(function () {\n      if (tooltip) for (var n = node;; n = n.parentNode) {\n        if (n && n.nodeType == 11) n = n.host;\n        if (n == document.body) return;\n\n        if (!n) {\n          hide();\n          break;\n        }\n      }\n      if (!tooltip) return clearInterval(poll);\n    }, 400);\n    CodeMirror.on(node, \"mouseout\", hide);\n  }\n\n  function LintState(cm, options, hasGutter) {\n    this.marked = [];\n    this.options = options;\n    this.timeout = null;\n    this.hasGutter = hasGutter;\n\n    this.onMouseOver = function (e) {\n      onMouseOver(cm, e);\n    };\n\n    this.waitingFor = 0;\n  }\n\n  function parseOptions(_cm, options) {\n    if (options instanceof Function) return {\n      getAnnotations: options\n    };\n    if (!options || options === true) options = {};\n    return options;\n  }\n\n  function clearMarks(cm) {\n    var state = cm.state.lint;\n    if (state.hasGutter) cm.clearGutter(GUTTER_ID);\n\n    for (var i = 0; i < state.marked.length; ++i) state.marked[i].clear();\n\n    state.marked.length = 0;\n  }\n\n  function makeMarker(cm, labels, severity, multiple, tooltips) {\n    var marker = document.createElement(\"div\"),\n        inner = marker;\n    marker.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-\" + severity;\n\n    if (multiple) {\n      inner = marker.appendChild(document.createElement(\"div\"));\n      inner.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-multiple\";\n    }\n\n    if (tooltips != false) CodeMirror.on(inner, \"mouseover\", function (e) {\n      showTooltipFor(cm, e, labels, inner);\n    });\n    return marker;\n  }\n\n  function getMaxSeverity(a, b) {\n    if (a == \"error\") return a;else return b;\n  }\n\n  function groupByLine(annotations) {\n    var lines = [];\n\n    for (var i = 0; i < annotations.length; ++i) {\n      var ann = annotations[i],\n          line = ann.from.line;\n      (lines[line] || (lines[line] = [])).push(ann);\n    }\n\n    return lines;\n  }\n\n  function annotationTooltip(ann) {\n    var severity = ann.severity;\n    if (!severity) severity = \"error\";\n    var tip = document.createElement(\"div\");\n    tip.className = \"CodeMirror-lint-message CodeMirror-lint-message-\" + severity;\n\n    if (typeof ann.messageHTML != 'undefined') {\n      tip.innerHTML = ann.messageHTML;\n    } else {\n      tip.appendChild(document.createTextNode(ann.message));\n    }\n\n    return tip;\n  }\n\n  function lintAsync(cm, getAnnotations, passOptions) {\n    var state = cm.state.lint;\n    var id = ++state.waitingFor;\n\n    function abort() {\n      id = -1;\n      cm.off(\"change\", abort);\n    }\n\n    cm.on(\"change\", abort);\n    getAnnotations(cm.getValue(), function (annotations, arg2) {\n      cm.off(\"change\", abort);\n      if (state.waitingFor != id) return;\n      if (arg2 && annotations instanceof CodeMirror) annotations = arg2;\n      cm.operation(function () {\n        updateLinting(cm, annotations);\n      });\n    }, passOptions, cm);\n  }\n\n  function startLinting(cm) {\n    var state = cm.state.lint,\n        options = state.options;\n    /*\n     * Passing rules in `options` property prevents JSHint (and other linters) from complaining\n     * about unrecognized rules like `onUpdateLinting`, `delay`, `lintOnChange`, etc.\n     */\n\n    var passOptions = options.options || options;\n    var getAnnotations = options.getAnnotations || cm.getHelper(CodeMirror.Pos(0, 0), \"lint\");\n    if (!getAnnotations) return;\n\n    if (options.async || getAnnotations.async) {\n      lintAsync(cm, getAnnotations, passOptions);\n    } else {\n      var annotations = getAnnotations(cm.getValue(), passOptions, cm);\n      if (!annotations) return;\n      if (annotations.then) annotations.then(function (issues) {\n        cm.operation(function () {\n          updateLinting(cm, issues);\n        });\n      });else cm.operation(function () {\n        updateLinting(cm, annotations);\n      });\n    }\n  }\n\n  function updateLinting(cm, annotationsNotSorted) {\n    clearMarks(cm);\n    var state = cm.state.lint,\n        options = state.options;\n    var annotations = groupByLine(annotationsNotSorted);\n\n    for (var line = 0; line < annotations.length; ++line) {\n      var anns = annotations[line];\n      if (!anns) continue;\n      var maxSeverity = null;\n      var tipLabel = state.hasGutter && document.createDocumentFragment();\n\n      for (var i = 0; i < anns.length; ++i) {\n        var ann = anns[i];\n        var severity = ann.severity;\n        if (!severity) severity = \"error\";\n        maxSeverity = getMaxSeverity(maxSeverity, severity);\n        if (options.formatAnnotation) ann = options.formatAnnotation(ann);\n        if (state.hasGutter) tipLabel.appendChild(annotationTooltip(ann));\n        if (ann.to) state.marked.push(cm.markText(ann.from, ann.to, {\n          className: \"CodeMirror-lint-mark CodeMirror-lint-mark-\" + severity,\n          __annotation: ann\n        }));\n      }\n\n      if (state.hasGutter) cm.setGutterMarker(line, GUTTER_ID, makeMarker(cm, tipLabel, maxSeverity, anns.length > 1, state.options.tooltips));\n    }\n\n    if (options.onUpdateLinting) options.onUpdateLinting(annotationsNotSorted, annotations, cm);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(function () {\n      startLinting(cm);\n    }, state.options.delay || 500);\n  }\n\n  function popupTooltips(cm, annotations, e) {\n    var target = e.target || e.srcElement;\n    var tooltip = document.createDocumentFragment();\n\n    for (var i = 0; i < annotations.length; i++) {\n      var ann = annotations[i];\n      tooltip.appendChild(annotationTooltip(ann));\n    }\n\n    showTooltipFor(cm, e, tooltip, target);\n  }\n\n  function onMouseOver(cm, e) {\n    var target = e.target || e.srcElement;\n    if (!/\\bCodeMirror-lint-mark-/.test(target.className)) return;\n    var box = target.getBoundingClientRect(),\n        x = (box.left + box.right) / 2,\n        y = (box.top + box.bottom) / 2;\n    var spans = cm.findMarksAt(cm.coordsChar({\n      left: x,\n      top: y\n    }, \"client\"));\n    var annotations = [];\n\n    for (var i = 0; i < spans.length; ++i) {\n      var ann = spans[i].__annotation;\n      if (ann) annotations.push(ann);\n    }\n\n    if (annotations.length) popupTooltips(cm, annotations, e);\n  }\n\n  CodeMirror.defineOption(\"lint\", false, function (cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      clearMarks(cm);\n      if (cm.state.lint.options.lintOnChange !== false) cm.off(\"change\", onChange);\n      CodeMirror.off(cm.getWrapperElement(), \"mouseover\", cm.state.lint.onMouseOver);\n      clearTimeout(cm.state.lint.timeout);\n      delete cm.state.lint;\n    }\n\n    if (val) {\n      var gutters = cm.getOption(\"gutters\"),\n          hasLintGutter = false;\n\n      for (var i = 0; i < gutters.length; ++i) if (gutters[i] == GUTTER_ID) hasLintGutter = true;\n\n      var state = cm.state.lint = new LintState(cm, parseOptions(cm, val), hasLintGutter);\n      if (state.options.lintOnChange !== false) cm.on(\"change\", onChange);\n      if (state.options.tooltips != false && state.options.tooltips != \"gutter\") CodeMirror.on(cm.getWrapperElement(), \"mouseover\", state.onMouseOver);\n      startLinting(cm);\n    }\n  });\n  CodeMirror.defineExtension(\"performLint\", function () {\n    if (this.state.lint) startLinting(this);\n  });\n});","map":{"version":3,"sources":["/home/dylan/scaffold-eth/node_modules/codemirror/addon/lint/lint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","GUTTER_ID","showTooltip","cm","e","content","tt","document","createElement","className","options","theme","appendChild","cloneNode","state","lint","selfContain","getWrapperElement","body","position","parentNode","off","style","top","Math","max","clientY","offsetHeight","left","clientX","on","opacity","rm","elt","removeChild","hideTooltip","setTimeout","showTooltipFor","node","tooltip","hide","poll","setInterval","n","nodeType","host","clearInterval","LintState","hasGutter","marked","timeout","onMouseOver","waitingFor","parseOptions","_cm","Function","getAnnotations","clearMarks","clearGutter","i","length","clear","makeMarker","labels","severity","multiple","tooltips","marker","inner","getMaxSeverity","a","b","groupByLine","annotations","lines","ann","line","from","push","annotationTooltip","tip","messageHTML","innerHTML","createTextNode","message","lintAsync","passOptions","id","abort","getValue","arg2","operation","updateLinting","startLinting","getHelper","Pos","async","then","issues","annotationsNotSorted","anns","maxSeverity","tipLabel","createDocumentFragment","formatAnnotation","to","markText","__annotation","setGutterMarker","onUpdateLinting","onChange","clearTimeout","delay","popupTooltips","target","srcElement","test","box","getBoundingClientRect","x","right","y","bottom","spans","findMarksAt","coordsChar","defineOption","val","old","Init","lintOnChange","gutters","getOption","hasLintGutter","defineExtension"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var GUTTER_ID = \"CodeMirror-lint-markers\";\n\n  function showTooltip(cm, e, content) {\n    var tt = document.createElement(\"div\");\n    tt.className = \"CodeMirror-lint-tooltip cm-s-\" + cm.options.theme;\n    tt.appendChild(content.cloneNode(true));\n    if (cm.state.lint.options.selfContain)\n      cm.getWrapperElement().appendChild(tt);\n    else\n      document.body.appendChild(tt);\n\n    function position(e) {\n      if (!tt.parentNode) return CodeMirror.off(document, \"mousemove\", position);\n      tt.style.top = Math.max(0, e.clientY - tt.offsetHeight - 5) + \"px\";\n      tt.style.left = (e.clientX + 5) + \"px\";\n    }\n    CodeMirror.on(document, \"mousemove\", position);\n    position(e);\n    if (tt.style.opacity != null) tt.style.opacity = 1;\n    return tt;\n  }\n  function rm(elt) {\n    if (elt.parentNode) elt.parentNode.removeChild(elt);\n  }\n  function hideTooltip(tt) {\n    if (!tt.parentNode) return;\n    if (tt.style.opacity == null) rm(tt);\n    tt.style.opacity = 0;\n    setTimeout(function() { rm(tt); }, 600);\n  }\n\n  function showTooltipFor(cm, e, content, node) {\n    var tooltip = showTooltip(cm, e, content);\n    function hide() {\n      CodeMirror.off(node, \"mouseout\", hide);\n      if (tooltip) { hideTooltip(tooltip); tooltip = null; }\n    }\n    var poll = setInterval(function() {\n      if (tooltip) for (var n = node;; n = n.parentNode) {\n        if (n && n.nodeType == 11) n = n.host;\n        if (n == document.body) return;\n        if (!n) { hide(); break; }\n      }\n      if (!tooltip) return clearInterval(poll);\n    }, 400);\n    CodeMirror.on(node, \"mouseout\", hide);\n  }\n\n  function LintState(cm, options, hasGutter) {\n    this.marked = [];\n    this.options = options;\n    this.timeout = null;\n    this.hasGutter = hasGutter;\n    this.onMouseOver = function(e) { onMouseOver(cm, e); };\n    this.waitingFor = 0\n  }\n\n  function parseOptions(_cm, options) {\n    if (options instanceof Function) return {getAnnotations: options};\n    if (!options || options === true) options = {};\n    return options;\n  }\n\n  function clearMarks(cm) {\n    var state = cm.state.lint;\n    if (state.hasGutter) cm.clearGutter(GUTTER_ID);\n    for (var i = 0; i < state.marked.length; ++i)\n      state.marked[i].clear();\n    state.marked.length = 0;\n  }\n\n  function makeMarker(cm, labels, severity, multiple, tooltips) {\n    var marker = document.createElement(\"div\"), inner = marker;\n    marker.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-\" + severity;\n    if (multiple) {\n      inner = marker.appendChild(document.createElement(\"div\"));\n      inner.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-multiple\";\n    }\n\n    if (tooltips != false) CodeMirror.on(inner, \"mouseover\", function(e) {\n      showTooltipFor(cm, e, labels, inner);\n    });\n\n    return marker;\n  }\n\n  function getMaxSeverity(a, b) {\n    if (a == \"error\") return a;\n    else return b;\n  }\n\n  function groupByLine(annotations) {\n    var lines = [];\n    for (var i = 0; i < annotations.length; ++i) {\n      var ann = annotations[i], line = ann.from.line;\n      (lines[line] || (lines[line] = [])).push(ann);\n    }\n    return lines;\n  }\n\n  function annotationTooltip(ann) {\n    var severity = ann.severity;\n    if (!severity) severity = \"error\";\n    var tip = document.createElement(\"div\");\n    tip.className = \"CodeMirror-lint-message CodeMirror-lint-message-\" + severity;\n    if (typeof ann.messageHTML != 'undefined') {\n      tip.innerHTML = ann.messageHTML;\n    } else {\n      tip.appendChild(document.createTextNode(ann.message));\n    }\n    return tip;\n  }\n\n  function lintAsync(cm, getAnnotations, passOptions) {\n    var state = cm.state.lint\n    var id = ++state.waitingFor\n    function abort() {\n      id = -1\n      cm.off(\"change\", abort)\n    }\n    cm.on(\"change\", abort)\n    getAnnotations(cm.getValue(), function(annotations, arg2) {\n      cm.off(\"change\", abort)\n      if (state.waitingFor != id) return\n      if (arg2 && annotations instanceof CodeMirror) annotations = arg2\n      cm.operation(function() {updateLinting(cm, annotations)})\n    }, passOptions, cm);\n  }\n\n  function startLinting(cm) {\n    var state = cm.state.lint, options = state.options;\n    /*\n     * Passing rules in `options` property prevents JSHint (and other linters) from complaining\n     * about unrecognized rules like `onUpdateLinting`, `delay`, `lintOnChange`, etc.\n     */\n    var passOptions = options.options || options;\n    var getAnnotations = options.getAnnotations || cm.getHelper(CodeMirror.Pos(0, 0), \"lint\");\n    if (!getAnnotations) return;\n    if (options.async || getAnnotations.async) {\n      lintAsync(cm, getAnnotations, passOptions)\n    } else {\n      var annotations = getAnnotations(cm.getValue(), passOptions, cm);\n      if (!annotations) return;\n      if (annotations.then) annotations.then(function(issues) {\n        cm.operation(function() {updateLinting(cm, issues)})\n      });\n      else cm.operation(function() {updateLinting(cm, annotations)})\n    }\n  }\n\n  function updateLinting(cm, annotationsNotSorted) {\n    clearMarks(cm);\n    var state = cm.state.lint, options = state.options;\n\n    var annotations = groupByLine(annotationsNotSorted);\n\n    for (var line = 0; line < annotations.length; ++line) {\n      var anns = annotations[line];\n      if (!anns) continue;\n\n      var maxSeverity = null;\n      var tipLabel = state.hasGutter && document.createDocumentFragment();\n\n      for (var i = 0; i < anns.length; ++i) {\n        var ann = anns[i];\n        var severity = ann.severity;\n        if (!severity) severity = \"error\";\n        maxSeverity = getMaxSeverity(maxSeverity, severity);\n\n        if (options.formatAnnotation) ann = options.formatAnnotation(ann);\n        if (state.hasGutter) tipLabel.appendChild(annotationTooltip(ann));\n\n        if (ann.to) state.marked.push(cm.markText(ann.from, ann.to, {\n          className: \"CodeMirror-lint-mark CodeMirror-lint-mark-\" + severity,\n          __annotation: ann\n        }));\n      }\n\n      if (state.hasGutter)\n        cm.setGutterMarker(line, GUTTER_ID, makeMarker(cm, tipLabel, maxSeverity, anns.length > 1,\n                                                       state.options.tooltips));\n    }\n    if (options.onUpdateLinting) options.onUpdateLinting(annotationsNotSorted, annotations, cm);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(function(){startLinting(cm);}, state.options.delay || 500);\n  }\n\n  function popupTooltips(cm, annotations, e) {\n    var target = e.target || e.srcElement;\n    var tooltip = document.createDocumentFragment();\n    for (var i = 0; i < annotations.length; i++) {\n      var ann = annotations[i];\n      tooltip.appendChild(annotationTooltip(ann));\n    }\n    showTooltipFor(cm, e, tooltip, target);\n  }\n\n  function onMouseOver(cm, e) {\n    var target = e.target || e.srcElement;\n    if (!/\\bCodeMirror-lint-mark-/.test(target.className)) return;\n    var box = target.getBoundingClientRect(), x = (box.left + box.right) / 2, y = (box.top + box.bottom) / 2;\n    var spans = cm.findMarksAt(cm.coordsChar({left: x, top: y}, \"client\"));\n\n    var annotations = [];\n    for (var i = 0; i < spans.length; ++i) {\n      var ann = spans[i].__annotation;\n      if (ann) annotations.push(ann);\n    }\n    if (annotations.length) popupTooltips(cm, annotations, e);\n  }\n\n  CodeMirror.defineOption(\"lint\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      clearMarks(cm);\n      if (cm.state.lint.options.lintOnChange !== false)\n        cm.off(\"change\", onChange);\n      CodeMirror.off(cm.getWrapperElement(), \"mouseover\", cm.state.lint.onMouseOver);\n      clearTimeout(cm.state.lint.timeout);\n      delete cm.state.lint;\n    }\n\n    if (val) {\n      var gutters = cm.getOption(\"gutters\"), hasLintGutter = false;\n      for (var i = 0; i < gutters.length; ++i) if (gutters[i] == GUTTER_ID) hasLintGutter = true;\n      var state = cm.state.lint = new LintState(cm, parseOptions(cm, val), hasLintGutter);\n      if (state.options.lintOnChange !== false)\n        cm.on(\"change\", onChange);\n      if (state.options.tooltips != false && state.options.tooltips != \"gutter\")\n        CodeMirror.on(cm.getWrapperElement(), \"mouseover\", state.onMouseOver);\n\n      startLinting(cm);\n    }\n  });\n\n  CodeMirror.defineExtension(\"performLint\", function() {\n    if (this.state.lint) startLinting(this);\n  });\n});\n"]},"metadata":{},"sourceType":"script"}