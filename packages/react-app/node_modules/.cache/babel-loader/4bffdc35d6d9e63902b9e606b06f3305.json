{"ast":null,"code":"\"use strict\";\n\nvar _graphql = require(\"graphql\");\n\nvar _codemirror = _interopRequireDefault(require(\"codemirror\"));\n\nvar _getTypeInfo = _interopRequireDefault(require(\"./utils/getTypeInfo\"));\n\nvar _SchemaReference = require(\"./utils/SchemaReference\");\n\nrequire(\"./utils/info-addon\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n *  Copyright (c) 2020 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Registers GraphQL \"info\" tooltips for CodeMirror.\n *\n * When hovering over a token, this presents a tooltip explaining it.\n *\n * Options:\n *\n *   - schema: GraphQLSchema provides positionally relevant info.\n *   - hoverTime: The number of ms to wait before showing info. (Default 500)\n *   - renderDescription: Convert a description to some HTML, Useful since\n *                        descriptions are often Markdown formatted.\n *   - onClick: A function called when a named thing is clicked.\n *\n */\n\n\n_codemirror.default.registerHelper('info', 'graphql', (token, options) => {\n  if (!options.schema || !token.state) {\n    return;\n  }\n\n  const state = token.state;\n  const kind = state.kind;\n  const step = state.step;\n  const typeInfo = (0, _getTypeInfo.default)(options.schema, token.state); // Given a Schema and a Token, produce the contents of an info tooltip.\n  // To do this, create a div element that we will render \"into\" and then pass\n  // it to various rendering functions.\n\n  if (kind === 'Field' && step === 0 && typeInfo.fieldDef || kind === 'AliasedField' && step === 2 && typeInfo.fieldDef) {\n    const into = document.createElement('div');\n    renderField(into, typeInfo, options);\n    renderDescription(into, options, typeInfo.fieldDef);\n    return into;\n  } else if (kind === 'Directive' && step === 1 && typeInfo.directiveDef) {\n    const into = document.createElement('div');\n    renderDirective(into, typeInfo, options);\n    renderDescription(into, options, typeInfo.directiveDef);\n    return into;\n  } else if (kind === 'Argument' && step === 0 && typeInfo.argDef) {\n    const into = document.createElement('div');\n    renderArg(into, typeInfo, options);\n    renderDescription(into, options, typeInfo.argDef);\n    return into;\n  } else if (kind === 'EnumValue' && typeInfo.enumValue && typeInfo.enumValue.description) {\n    const into = document.createElement('div');\n    renderEnumValue(into, typeInfo, options);\n    renderDescription(into, options, typeInfo.enumValue);\n    return into;\n  } else if (kind === 'NamedType' && typeInfo.type && typeInfo.type.description) {\n    const into = document.createElement('div');\n    renderType(into, typeInfo, options, typeInfo.type);\n    renderDescription(into, options, typeInfo.type);\n    return into;\n  }\n});\n\nfunction renderField(into, typeInfo, options) {\n  renderQualifiedField(into, typeInfo, options);\n  renderTypeAnnotation(into, typeInfo, options, typeInfo.type);\n}\n\nfunction renderQualifiedField(into, typeInfo, options) {\n  const fieldName = typeInfo.fieldDef.name;\n\n  if (fieldName.slice(0, 2) !== '__') {\n    renderType(into, typeInfo, options, typeInfo.parentType);\n    text(into, '.');\n  }\n\n  text(into, fieldName, 'field-name', options, (0, _SchemaReference.getFieldReference)(typeInfo));\n}\n\nfunction renderDirective(into, typeInfo, options) {\n  const name = '@' + typeInfo.directiveDef.name;\n  text(into, name, 'directive-name', options, (0, _SchemaReference.getDirectiveReference)(typeInfo));\n}\n\nfunction renderArg(into, typeInfo, options) {\n  if (typeInfo.directiveDef) {\n    renderDirective(into, typeInfo, options);\n  } else if (typeInfo.fieldDef) {\n    renderQualifiedField(into, typeInfo, options);\n  }\n\n  const name = typeInfo.argDef.name;\n  text(into, '(');\n  text(into, name, 'arg-name', options, (0, _SchemaReference.getArgumentReference)(typeInfo));\n  renderTypeAnnotation(into, typeInfo, options, typeInfo.inputType);\n  text(into, ')');\n}\n\nfunction renderTypeAnnotation(into, typeInfo, options, t) {\n  text(into, ': ');\n  renderType(into, typeInfo, options, t);\n}\n\nfunction renderEnumValue(into, typeInfo, options) {\n  const name = typeInfo.enumValue.name;\n  renderType(into, typeInfo, options, typeInfo.inputType);\n  text(into, '.');\n  text(into, name, 'enum-value', options, (0, _SchemaReference.getEnumValueReference)(typeInfo));\n}\n\nfunction renderType(into, typeInfo, options, t) {\n  if (t instanceof _graphql.GraphQLNonNull) {\n    renderType(into, typeInfo, options, t.ofType);\n    text(into, '!');\n  } else if (t instanceof _graphql.GraphQLList) {\n    text(into, '[');\n    renderType(into, typeInfo, options, t.ofType);\n    text(into, ']');\n  } else {\n    text(into, t.name, 'type-name', options, (0, _SchemaReference.getTypeReference)(typeInfo, t));\n  }\n}\n\nfunction renderDescription(into, options, def) {\n  const description = def.description;\n\n  if (description) {\n    const descriptionDiv = document.createElement('div');\n    descriptionDiv.className = 'info-description';\n\n    if (options.renderDescription) {\n      descriptionDiv.innerHTML = options.renderDescription(description);\n    } else {\n      descriptionDiv.appendChild(document.createTextNode(description));\n    }\n\n    into.appendChild(descriptionDiv);\n  }\n\n  renderDeprecation(into, options, def);\n}\n\nfunction renderDeprecation(into, options, def) {\n  const reason = def.deprecationReason;\n\n  if (reason) {\n    const deprecationDiv = document.createElement('div');\n    deprecationDiv.className = 'info-deprecation';\n\n    if (options.renderDescription) {\n      deprecationDiv.innerHTML = options.renderDescription(reason);\n    } else {\n      deprecationDiv.appendChild(document.createTextNode(reason));\n    }\n\n    const label = document.createElement('span');\n    label.className = 'info-deprecation-label';\n    label.appendChild(document.createTextNode('Deprecated: '));\n    deprecationDiv.insertBefore(label, deprecationDiv.firstChild);\n    into.appendChild(deprecationDiv);\n  }\n}\n\nfunction text(into, content, className, options = {\n  onClick: null\n}, ref) {\n  if (className) {\n    const onClick = options.onClick;\n    let node;\n\n    if (onClick) {\n      node = document.createElement('a'); // Providing a href forces proper a tag behavior, though we don't actually\n      // want clicking the node to navigate anywhere.\n\n      node.href = 'javascript:void 0'; // eslint-disable-line no-script-url\n\n      node.addEventListener('click', e => {\n        onClick(ref, e);\n      });\n    } else {\n      node = document.createElement('span');\n    }\n\n    node.className = className;\n    node.appendChild(document.createTextNode(content));\n    into.appendChild(node);\n  } else {\n    into.appendChild(document.createTextNode(content));\n  }\n}","map":{"version":3,"sources":["/home/dylan/scaffold-eth/node_modules/codemirror-graphql/info.js"],"names":["_graphql","require","_codemirror","_interopRequireDefault","_getTypeInfo","_SchemaReference","obj","__esModule","default","registerHelper","token","options","schema","state","kind","step","typeInfo","fieldDef","into","document","createElement","renderField","renderDescription","directiveDef","renderDirective","argDef","renderArg","enumValue","description","renderEnumValue","type","renderType","renderQualifiedField","renderTypeAnnotation","fieldName","name","slice","parentType","text","getFieldReference","getDirectiveReference","getArgumentReference","inputType","t","getEnumValueReference","GraphQLNonNull","ofType","GraphQLList","getTypeReference","def","descriptionDiv","className","innerHTML","appendChild","createTextNode","renderDeprecation","reason","deprecationReason","deprecationDiv","label","insertBefore","firstChild","content","onClick","ref","node","href","addEventListener","e"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _graphql = require(\"graphql\");\n\nvar _codemirror = _interopRequireDefault(require(\"codemirror\"));\n\nvar _getTypeInfo = _interopRequireDefault(require(\"./utils/getTypeInfo\"));\n\nvar _SchemaReference = require(\"./utils/SchemaReference\");\n\nrequire(\"./utils/info-addon\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n *  Copyright (c) 2020 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Registers GraphQL \"info\" tooltips for CodeMirror.\n *\n * When hovering over a token, this presents a tooltip explaining it.\n *\n * Options:\n *\n *   - schema: GraphQLSchema provides positionally relevant info.\n *   - hoverTime: The number of ms to wait before showing info. (Default 500)\n *   - renderDescription: Convert a description to some HTML, Useful since\n *                        descriptions are often Markdown formatted.\n *   - onClick: A function called when a named thing is clicked.\n *\n */\n_codemirror.default.registerHelper('info', 'graphql', (token, options) => {\n  if (!options.schema || !token.state) {\n    return;\n  }\n\n  const state = token.state;\n  const kind = state.kind;\n  const step = state.step;\n  const typeInfo = (0, _getTypeInfo.default)(options.schema, token.state); // Given a Schema and a Token, produce the contents of an info tooltip.\n  // To do this, create a div element that we will render \"into\" and then pass\n  // it to various rendering functions.\n\n  if (kind === 'Field' && step === 0 && typeInfo.fieldDef || kind === 'AliasedField' && step === 2 && typeInfo.fieldDef) {\n    const into = document.createElement('div');\n    renderField(into, typeInfo, options);\n    renderDescription(into, options, typeInfo.fieldDef);\n    return into;\n  } else if (kind === 'Directive' && step === 1 && typeInfo.directiveDef) {\n    const into = document.createElement('div');\n    renderDirective(into, typeInfo, options);\n    renderDescription(into, options, typeInfo.directiveDef);\n    return into;\n  } else if (kind === 'Argument' && step === 0 && typeInfo.argDef) {\n    const into = document.createElement('div');\n    renderArg(into, typeInfo, options);\n    renderDescription(into, options, typeInfo.argDef);\n    return into;\n  } else if (kind === 'EnumValue' && typeInfo.enumValue && typeInfo.enumValue.description) {\n    const into = document.createElement('div');\n    renderEnumValue(into, typeInfo, options);\n    renderDescription(into, options, typeInfo.enumValue);\n    return into;\n  } else if (kind === 'NamedType' && typeInfo.type && typeInfo.type.description) {\n    const into = document.createElement('div');\n    renderType(into, typeInfo, options, typeInfo.type);\n    renderDescription(into, options, typeInfo.type);\n    return into;\n  }\n});\n\nfunction renderField(into, typeInfo, options) {\n  renderQualifiedField(into, typeInfo, options);\n  renderTypeAnnotation(into, typeInfo, options, typeInfo.type);\n}\n\nfunction renderQualifiedField(into, typeInfo, options) {\n  const fieldName = typeInfo.fieldDef.name;\n\n  if (fieldName.slice(0, 2) !== '__') {\n    renderType(into, typeInfo, options, typeInfo.parentType);\n    text(into, '.');\n  }\n\n  text(into, fieldName, 'field-name', options, (0, _SchemaReference.getFieldReference)(typeInfo));\n}\n\nfunction renderDirective(into, typeInfo, options) {\n  const name = '@' + typeInfo.directiveDef.name;\n  text(into, name, 'directive-name', options, (0, _SchemaReference.getDirectiveReference)(typeInfo));\n}\n\nfunction renderArg(into, typeInfo, options) {\n  if (typeInfo.directiveDef) {\n    renderDirective(into, typeInfo, options);\n  } else if (typeInfo.fieldDef) {\n    renderQualifiedField(into, typeInfo, options);\n  }\n\n  const name = typeInfo.argDef.name;\n  text(into, '(');\n  text(into, name, 'arg-name', options, (0, _SchemaReference.getArgumentReference)(typeInfo));\n  renderTypeAnnotation(into, typeInfo, options, typeInfo.inputType);\n  text(into, ')');\n}\n\nfunction renderTypeAnnotation(into, typeInfo, options, t) {\n  text(into, ': ');\n  renderType(into, typeInfo, options, t);\n}\n\nfunction renderEnumValue(into, typeInfo, options) {\n  const name = typeInfo.enumValue.name;\n  renderType(into, typeInfo, options, typeInfo.inputType);\n  text(into, '.');\n  text(into, name, 'enum-value', options, (0, _SchemaReference.getEnumValueReference)(typeInfo));\n}\n\nfunction renderType(into, typeInfo, options, t) {\n  if (t instanceof _graphql.GraphQLNonNull) {\n    renderType(into, typeInfo, options, t.ofType);\n    text(into, '!');\n  } else if (t instanceof _graphql.GraphQLList) {\n    text(into, '[');\n    renderType(into, typeInfo, options, t.ofType);\n    text(into, ']');\n  } else {\n    text(into, t.name, 'type-name', options, (0, _SchemaReference.getTypeReference)(typeInfo, t));\n  }\n}\n\nfunction renderDescription(into, options, def) {\n  const description = def.description;\n\n  if (description) {\n    const descriptionDiv = document.createElement('div');\n    descriptionDiv.className = 'info-description';\n\n    if (options.renderDescription) {\n      descriptionDiv.innerHTML = options.renderDescription(description);\n    } else {\n      descriptionDiv.appendChild(document.createTextNode(description));\n    }\n\n    into.appendChild(descriptionDiv);\n  }\n\n  renderDeprecation(into, options, def);\n}\n\nfunction renderDeprecation(into, options, def) {\n  const reason = def.deprecationReason;\n\n  if (reason) {\n    const deprecationDiv = document.createElement('div');\n    deprecationDiv.className = 'info-deprecation';\n\n    if (options.renderDescription) {\n      deprecationDiv.innerHTML = options.renderDescription(reason);\n    } else {\n      deprecationDiv.appendChild(document.createTextNode(reason));\n    }\n\n    const label = document.createElement('span');\n    label.className = 'info-deprecation-label';\n    label.appendChild(document.createTextNode('Deprecated: '));\n    deprecationDiv.insertBefore(label, deprecationDiv.firstChild);\n    into.appendChild(deprecationDiv);\n  }\n}\n\nfunction text(into, content, className, options = {\n  onClick: null\n}, ref) {\n  if (className) {\n    const onClick = options.onClick;\n    let node;\n\n    if (onClick) {\n      node = document.createElement('a'); // Providing a href forces proper a tag behavior, though we don't actually\n      // want clicking the node to navigate anywhere.\n\n      node.href = 'javascript:void 0'; // eslint-disable-line no-script-url\n\n      node.addEventListener('click', e => {\n        onClick(ref, e);\n      });\n    } else {\n      node = document.createElement('span');\n    }\n\n    node.className = className;\n    node.appendChild(document.createTextNode(content));\n    into.appendChild(node);\n  } else {\n    into.appendChild(document.createTextNode(content));\n  }\n}"]},"metadata":{},"sourceType":"script"}