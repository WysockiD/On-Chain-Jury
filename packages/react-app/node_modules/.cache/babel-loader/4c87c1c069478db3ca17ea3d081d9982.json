{"ast":null,"code":"var _jsxFileName = \"/home/dylan/scaffold-eth/packages/react-app/src/views/ExampleUI.jsx\";\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from \"react\";\nimport { Button, List, Divider, Input, Card, DatePicker, Slider, Switch, Progress, Spin } from \"antd\";\nimport { SyncOutlined } from '@ant-design/icons';\nimport { Address, Balance } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\nimport { padding } from \"aes-js\";\nexport default function ExampleUI({\n  count,\n  purpose,\n  setGuilty,\n  setPurposeEvents,\n  address,\n  mainnetProvider,\n  userProvider,\n  localProvider,\n  yourLocalBalance,\n  price,\n  tx,\n  readContracts,\n  writeContracts\n}) {\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n  const [newPurpose2, setNewPurpose2] = useState(\"loading...\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      border: \"3px solid #cccccc\",\n      padding: 16,\n      width: 400,\n      margin: \"auto\",\n      marginTop: 64\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Jury Contract:\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Register yourself first with your ETH address and name, then confirm/ sign the transaction and continue to make your judgement\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: e => {\n      setNewPurpose(e.target.value);\n    },\n    placeholder: \"Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: e => {\n      setNewPurpose2(e.target.value);\n    },\n    placeholder: \"Full Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      console.log(\"newJurorAddress\", newPurpose);\n      console.log(\"newJurorName\", newPurpose2);\n      /* look how you call setPurpose on your contract: */\n\n      tx(writeContracts.YourContract.Register(newPurpose, newPurpose2));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Cast Your Judgement Onto The Blockchain:\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    style: {\n      margin: 8\n    },\n    onClick: () => {\n      console.log(\"newPurpose\", newPurpose);\n      /* look how you call setPurpose on your contract: */\n\n      tx(writeContracts.YourContract.Guilty(true));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Guilty\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    onClick: () => {\n      console.log(\"newPurpose\", newPurpose);\n      /* look how you call setPurpose on your contract: */\n\n      tx(writeContracts.YourContract.NotGuilty(true));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Not Guilty\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    block: true,\n    onClick: () => {\n      console.log(\"newPurpose\", newPurpose);\n      /* look how you call setPurpose on your contract: */\n\n      tx(writeContracts.YourContract.Finish(true));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Finalize\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), \"Your Address:\", /*#__PURE__*/React.createElement(Address, {\n    address: address,\n    ensProvider: mainnetProvider,\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), \"Trial Contract Address:\", /*#__PURE__*/React.createElement(Address, {\n    address: readContracts ? readContracts.YourContract.address : readContracts,\n    ensProvider: mainnetProvider,\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Your Balance: \", yourLocalBalance ? formatEther(yourLocalBalance) : \"...\", \" ETH \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"OR\"), /*#__PURE__*/React.createElement(Balance, {\n    address: address,\n    provider: localProvider,\n    price: price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 600,\n      margin: \"auto\",\n      marginTop: 32,\n      paddingBottom: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"Events:\"), /*#__PURE__*/React.createElement(List, {\n    bordered: true,\n    dataSource: setPurposeEvents,\n    renderItem: item => {\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: item.time + \"_\" + item.id + \"_\" + item.addr + \"_\" + item.count + \"_\" + item.verdict + \"_\" + item.setnotguilty + \"_\" + item.setguilty + \"_\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"font\", {\n        color: \"white\",\n        fontSize: 25,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 16\n        }\n      }, \"Register: \"), /*#__PURE__*/React.createElement(Address, {\n        address: item[2],\n        ensProvider: mainnetProvider,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 67\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"font\", {\n        color: \"grey\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 22\n        }\n      }, \"Full Name: \"), item[1], /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }), \"verdict:\", item[5]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingBottom: 90\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/dylan/scaffold-eth/packages/react-app/src/views/ExampleUI.jsx"],"names":["React","useState","Button","List","Divider","Input","Card","DatePicker","Slider","Switch","Progress","Spin","SyncOutlined","Address","Balance","parseEther","formatEther","padding","ExampleUI","count","purpose","setGuilty","setPurposeEvents","address","mainnetProvider","userProvider","localProvider","yourLocalBalance","price","tx","readContracts","writeContracts","newPurpose","setNewPurpose","newPurpose2","setNewPurpose2","border","width","margin","marginTop","e","target","value","console","log","YourContract","Register","Guilty","NotGuilty","Finish","paddingBottom","item","time","id","addr","verdict","setnotguilty","setguilty"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React, { useState } from \"react\";\nimport { Button, List, Divider, Input, Card, DatePicker, Slider, Switch, Progress, Spin } from \"antd\";\nimport { SyncOutlined } from '@ant-design/icons';\nimport { Address, Balance } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\nimport { padding } from \"aes-js\";\n\nexport default function ExampleUI({count, purpose, setGuilty, setPurposeEvents, address, mainnetProvider, userProvider, localProvider, yourLocalBalance, price, tx, readContracts, writeContracts }) {\n\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n  const [newPurpose2, setNewPurpose2] = useState(\"loading...\");\n\n  return (\n    <div>\n      {/*\n        ⚙️ Here is an example UI that displays and sets the purpose in your smart contract:\n      */}\n      <div style={{border:\"3px solid #cccccc\", padding:16, width:400, margin:\"auto\",marginTop:64}}>\n        <h2>Jury Contract:</h2>\n\n        <h4>Register yourself first with your ETH address and name, then confirm/ sign the transaction and continue to make your judgement</h4>\n\n        <Divider/>\n\n        <div style={{margin:8}}>\n          <Input onChange={(e)=>{setNewPurpose(e.target.value)}} placeholder=\"Address\"/>\n          <div style={{margin:8}}/>\n          <Input onChange={(e)=>{setNewPurpose2(e.target.value)}} placeholder=\"Full Name\"/>\n          <div style={{margin:8}}/>\n          <Button \n          \n              \n              onClick={()=>{        \n            console.log(\"newJurorAddress\",newPurpose)\n            console.log(\"newJurorName\",newPurpose2)\n            /* look how you call setPurpose on your contract: */\n            tx( writeContracts.YourContract.Register(newPurpose, newPurpose2) )\n          }}>Register</Button>\n        </div>\n\n\n        <Divider />\n        <h4>\n\n          Cast Your Judgement Onto The Blockchain:\n\n        </h4>\n        <Button \n        size=\"large\"\n        style={{margin:8}}\n              \n              onClick={()=>{        \n            console.log(\"newPurpose\",newPurpose)\n            /* look how you call setPurpose on your contract: */\n            tx( writeContracts.YourContract.Guilty(true) )\n          }}>Guilty</Button>\n\n\n        <Button \n        size=\"large\"\n        \n        \n              \n              onClick={()=>{        \n            console.log(\"newPurpose\",newPurpose)\n            /* look how you call setPurpose on your contract: */\n            tx( writeContracts.YourContract.NotGuilty(true) )\n          }}>Not Guilty</Button>\n\n        <Divider />\n\n\n        <Button \n              \n              \n              \n              size=\"large\" block\n              onClick={()=>{        \n            console.log(\"newPurpose\",newPurpose)\n            /* look how you call setPurpose on your contract: */\n            tx( writeContracts.YourContract.Finish(true) )\n          }}>Finalize</Button>\n\n        <Divider />\n\n        Your Address:\n        <Address\n            address={address}\n            ensProvider={mainnetProvider}\n            fontSize={16}\n        />\n\n        <Divider />\n        \n        Trial Contract Address:\n        <Address\n            address={readContracts?readContracts.YourContract.address:readContracts}\n            ensProvider={mainnetProvider}\n            fontSize={16}\n        />\n\n\n        <Divider />\n\n        {  /* use formatEther to display a BigNumber: */ }\n        <h2>Your Balance: {yourLocalBalance?formatEther(yourLocalBalance):\"...\"} ETH </h2>\n\n        <div>OR</div>\n\n        <Balance\n          address={address}\n          provider={localProvider}\n          price={price}\n        />\n\n\n        \n\n\n\n      </div>\n\n      {/*\n        📑 Maybe display a list of events?\n          (uncomment the event and emit line in YourContract.sol! )\n      */}\n      <div style={{ width:600, margin: \"auto\", marginTop:32, paddingBottom:32 }}>\n        <h2>Events:</h2>\n        <List\n          bordered\n          dataSource={setPurposeEvents}\n\n          renderItem={item => {\n            return (\n              <List.Item key={item.time+\"_\"+item.id+\"_\"+item.addr+\"_\"+item.count+\"_\"+item.verdict+\"_\"+item.setnotguilty+\"_\"+item.setguilty+\"_\"}>\n               \n               <font color='white' fontSize={25}>Register: </font><Address\n                    address={item[2]}\n                    ensProvider={mainnetProvider}\n                    fontSize={16}\n                  /> <font color='grey'>Full Name: </font> \n                {item[1]}\n                \n              <div></div>\n                verdict:\n                {item[5]}\n                \n              </List.Item>\n              \n\n              \n            );\n          }}\n        />\n      </div>\n\n      <div style={{ paddingBottom: 90}}/>\n      \n      \n    </div>\n    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}